<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.6.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>groupId</groupId>
    <artifactId>code</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <java.version>
            1.8
        </java.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot</artifactId>
            <version>2.2.6.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
            <version>2.2.6.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.ws</groupId>
            <artifactId>spring-ws-core</artifactId>
            <version>2.2.1.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13-rc-1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.6</version>
        </dependency>

    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId> com.github.eirslett</groupId>
                <artifactId> frontend-maven-plugin </artifactId>
                <version> 1.7.6 </version>
                <executions>
                    <execution>
                        <id>install Node and npm ...</id>
                        <goals>
                            <goal> install-node-and-npm </goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <nodeVersion> v10.16.1 </nodeVersion>
                            <npmVersion> 6.9.0</npmVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id> npm install all of our dependencies </id>
                        <goals>
                            <goal> npm </goal>
                        </goals>
                        <phase> generate-test-resources </phase>
                        <configuration>
                            <arguments> install </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id> npm build our react application </id>
                        <goals>
                            <goal> npm </goal>
                        </goals>
                        <phase> generate-test-resources</phase>
                        <configuration>
                            <arguments> run build </arguments>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <workingDirectory> src/main/front_end </workingDirectory>
                </configuration>
            </plugin>

            <plugin>
                <groupId> org.apache.maven.plugins</groupId>
                <artifactId> maven-resources-plugin </artifactId>
                <executions>
                    <execution>
                        <id> copy my react fronted end to the static folder of my spring app </id>
                        <phase> process-resources </phase>
                        <goals>
                            <goal> copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory> target/classes/static </outputDirectory>
                            <resources>
                                <resource>
                                    <directory> src/main/front_end/build </directory>
                                    <filtering> true </filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>